Index: linux-2.6.33/arch/arm/plat-mxc/pwm.c
===================================================================
--- linux-2.6.33.orig/arch/arm/plat-mxc/pwm.c
+++ linux-2.6.33/arch/arm/plat-mxc/pwm.c
@@ -6,6 +6,7 @@
  * published by the Free Software Foundation.
  *
  * Derived from pxa PWM driver by eric miao <eric.miao@marvell.com>
+ * Copyright 2009 Freescale Semiconductor, Inc. All Rights Reserved.
  */
 
 #include <linux/module.h>
@@ -31,11 +32,15 @@
 #define MX3_PWMSAR                0x0C    /* PWM Sample Register */
 #define MX3_PWMPR                 0x10    /* PWM Period Register */
 #define MX3_PWMCR_PRESCALER(x)    (((x - 1) & 0xFFF) << 4)
-#define MX3_PWMCR_CLKSRC_IPG_HIGH (2 << 16)
-#define MX3_PWMCR_CLKSRC_IPG      (1 << 16)
-#define MX3_PWMCR_EN              (1 << 0)
-
 
+#define MX3_PWMCR_STOPEN	  (1 << 25)
+#define MX3_PWMCR_DOZEEN          (1 << 24)
+#define MX3_PWMCR_WAITEN          (1 << 23)
+#define MX3_PWMCR_DBGEN		  (1 << 22)
+#define MX3_PWMCR_CLKSRC_IPG	  (1 << 16)
+#define MX3_PWMCR_CLKSRC_IPG_HIGH (2 << 16)
+#define MX3_PWMCR_CLKSRC_IPG_32k  (3 << 16)
+#define MX3_PWMCR_EN		  (1 << 0)
 
 struct pwm_device {
 	struct list_head	node;
@@ -44,7 +49,6 @@ struct pwm_device {
 	const char	*label;
 	struct clk	*clk;
 
-	int		clk_enabled;
 	void __iomem	*mmio_base;
 
 	unsigned int	use_count;
@@ -76,7 +80,9 @@ int pwm_config(struct pwm_device *pwm, i
 		writel(duty_cycles, pwm->mmio_base + MX3_PWMSAR);
 		writel(period_cycles, pwm->mmio_base + MX3_PWMPR);
 
-		cr = MX3_PWMCR_PRESCALER(prescale) | MX3_PWMCR_EN;
+		cr = MX3_PWMCR_PRESCALER(prescale) |
+		     MX3_PWMCR_STOPEN | MX3_PWMCR_DOZEEN |
+		     MX3_PWMCR_WAITEN | MX3_PWMCR_DBGEN;
 
 		if (cpu_is_mx25())
 			cr |= MX3_PWMCR_CLKSRC_IPG;
@@ -114,25 +120,23 @@ EXPORT_SYMBOL(pwm_config);
 
 int pwm_enable(struct pwm_device *pwm)
 {
-	int rc = 0;
+	unsigned long reg;
 
-	if (!pwm->clk_enabled) {
-		rc = clk_enable(pwm->clk);
-		if (!rc)
-			pwm->clk_enabled = 1;
-	}
-	return rc;
+	reg = readl(pwm->mmio_base + MX3_PWMCR);
+	reg |= MX3_PWMCR_EN;
+	writel(reg, pwm->mmio_base + MX3_PWMCR);
+
+	return 0;
 }
 EXPORT_SYMBOL(pwm_enable);
 
 void pwm_disable(struct pwm_device *pwm)
 {
-	writel(0, pwm->mmio_base + MX3_PWMCR);
+	unsigned long reg;
 
-	if (pwm->clk_enabled) {
-		clk_disable(pwm->clk);
-		pwm->clk_enabled = 0;
-	}
+	reg = readl(pwm->mmio_base + MX3_PWMCR);
+	reg &= ~MX3_PWMCR_EN;
+	writel(reg, pwm->mmio_base + MX3_PWMCR);
 }
 EXPORT_SYMBOL(pwm_disable);
 
@@ -200,8 +204,6 @@ static int __devinit mxc_pwm_probe(struc
 		goto err_free;
 	}
 
-	pwm->clk_enabled = 0;
-
 	pwm->use_count = 0;
 	pwm->pwm_id = pdev->id;
 	pwm->pdev = pdev;
@@ -232,6 +234,9 @@ static int __devinit mxc_pwm_probe(struc
 	mutex_unlock(&pwm_lock);
 
 	platform_set_drvdata(pdev, pwm);
+	
+	clk_enable(pwm->clk);
+
 	return 0;
 
 err_free_mem:
