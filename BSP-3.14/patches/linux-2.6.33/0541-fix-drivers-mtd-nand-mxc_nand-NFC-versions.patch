Index: linux-2.6.33/drivers/mtd/nand/mxc_nand.c
===================================================================
--- linux-2.6.33.orig/drivers/mtd/nand/mxc_nand.c
+++ linux-2.6.33/drivers/mtd/nand/mxc_nand.c
@@ -37,8 +37,8 @@
 
 #define DRIVER_NAME "mxc_nand"
 
-#define nfc_is_v21()		(cpu_is_mx25() || cpu_is_mx35())
-#define nfc_is_v1()		(cpu_is_mx31() || cpu_is_mx27())
+#define nfc_is_v11()		(cpu_is_mx25() || cpu_is_mx35())
+#define nfc_is_v10()		(cpu_is_mx31() || cpu_is_mx27())
 
 /* Addresses for NFC registers */
 #define NFC_BUF_SIZE		0xE00
@@ -253,7 +253,7 @@ static void send_page(struct mtd_info *m
 	struct mxc_nand_host *host = nand_chip->priv;
 	int bufs, i;
 
-	if (nfc_is_v1() && mtd->writesize > 512)
+	if (nfc_is_v10() && mtd->writesize > 512)
 		bufs = 4;
 	else
 		bufs = 1;
@@ -354,7 +354,7 @@ static int mxc_nand_correct_data(struct
 	 */
 	uint16_t ecc_status = readw(host->regs + NFC_ECC_STATUS_RESULT);
 
-	if (nfc_is_v21()) {
+	if (nfc_is_v11()) {
 		if ((ecc_status & 0xf) > 1 ||
 		    ((ecc_status >> 4) & 0xf) > 1 ||
 		    ((ecc_status >> 8) & 0xf) > 1 ||
@@ -364,7 +364,7 @@ static int mxc_nand_correct_data(struct
 			      "HWECC uncorrectable 2-bit ECC error\n");
 			return -1;
 		}
-	} else if (nfc_is_v1()) {
+	} else if (nfc_is_v10()) {
 		if (((ecc_status & 0x3) == 2) || ((ecc_status >> 2) == 2)) {
 			DEBUG(MTD_DEBUG_LEVEL0,
 			      "MXC_NAND: HWECC uncorrectable 2-bit ECC error\n");
@@ -849,12 +849,12 @@ static int __init mxcnd_probe(struct pla
 	host->main_area1 = host->base + 0x200;
 	host->main_area3 = host->base + 0x600;
 
-	if (nfc_is_v21()) {
+	if (nfc_is_v11()) {
 		host->regs = host->base + 0x1000;
 		host->spare0 = host->base + 0x1000;
 		oob_smallpage = &nandv2_hw_eccoob_smallpage;
 		oob_largepage = &nandv2_hw_eccoob_largepage;
-	} else if (nfc_is_v1()) {
+	} else if (nfc_is_v10()) {
 		host->regs = host->base;
 		host->spare0 = host->base + 0x800;
 		oob_smallpage = &nandv1_hw_eccoob_smallpage;
@@ -866,7 +866,7 @@ static int __init mxcnd_probe(struct pla
 	tmp = readw(host->regs + NFC_CONFIG1);
 	tmp |= NFC_INT_MSK;
 	tmp &= ~NFC_SP_EN;
-	if (nfc_is_v21())
+	if (nfc_is_v11())
 		tmp |= NFC_ECC_4BIT;
 	writew(tmp, host->regs + NFC_CONFIG1);
 
@@ -886,11 +886,11 @@ static int __init mxcnd_probe(struct pla
 	writew(0x2, host->regs + NFC_CONFIG);
 
 	/* Blocks to be unlocked */
-	if (nfc_is_v21()) {
+	if (nfc_is_v11()) {
 		writew(0x0, host->regs + NFC_V21_UNLOCKSTART_BLKADDR);
 	        writew(0xffff, host->regs + NFC_V21_UNLOCKEND_BLKADDR);
 		this->ecc.bytes = 9;
-	} else if (nfc_is_v1()) {
+	} else if (nfc_is_v10()) {
 		writew(0x0, host->regs + NFC_V1_UNLOCKSTART_BLKADDR);
 	        writew(0x4000, host->regs + NFC_V1_UNLOCKEND_BLKADDR);
 		this->ecc.bytes = 5;
