Index: linux-2.6.33/drivers/video/backlight/lcd.c
===================================================================
--- linux-2.6.33.orig/drivers/video/backlight/lcd.c
+++ linux-2.6.33/drivers/video/backlight/lcd.c
@@ -13,68 +13,30 @@
 #include <linux/ctype.h>
 #include <linux/err.h>
 #include <linux/fb.h>
+#include <linux/platform_device.h>
+#include <video/platform_lcd.h>
 
-#if defined(CONFIG_FB) || (defined(CONFIG_FB_MODULE) && \
-			   defined(CONFIG_LCD_CLASS_DEVICE_MODULE))
-/* This callback gets called when something important happens inside a
- * framebuffer driver. We're looking if that important event is blanking,
- * and if it is, we're switching lcd power as well ...
- */
-static int fb_notifier_callback(struct notifier_block *self,
-				 unsigned long event, void *data)
-{
-	struct lcd_device *ld;
-	struct fb_event *evdata = data;
-
-	/* If we aren't interested in this event, skip it immediately ... */
-	switch (event) {
-	case FB_EVENT_BLANK:
-	case FB_EVENT_MODE_CHANGE:
-	case FB_EVENT_MODE_CHANGE_ALL:
-		break;
-	default:
-		return 0;
-	}
-
-	ld = container_of(self, struct lcd_device, fb_notif);
-	if (!ld->ops)
-		return 0;
-
-	mutex_lock(&ld->ops_lock);
-	if (!ld->ops->check_fb || ld->ops->check_fb(ld, evdata->info)) {
-		if (event == FB_EVENT_BLANK) {
-			if (ld->ops->set_power)
-				ld->ops->set_power(ld, *(int *)evdata->data);
-		} else {
-			if (ld->ops->set_mode)
-				ld->ops->set_mode(ld, evdata->data);
+int lcd_set_power(struct device *dev, unsigned int power) {
+	int ret = 0;
+	struct platform_device *pd = to_platform_device(dev);
+	struct platform_lcd *plcd = platform_get_drvdata(pd);
+	struct lcd_device *ld = plcd->lcd;
+
+	if(power > FB_BLANK_POWERDOWN)
+		ret = -EINVAL;
+	else {
+		mutex_lock(&ld->ops_lock);
+		if (ld->ops && ld->ops->set_power) {
+			pr_debug("lcd: set power to %d\n", power);
+			ld->ops->set_power(ld, power);
 		}
+		mutex_unlock(&ld->ops_lock);
 	}
-	mutex_unlock(&ld->ops_lock);
-	return 0;
-}
 
-static int lcd_register_fb(struct lcd_device *ld)
-{
-	memset(&ld->fb_notif, 0, sizeof(ld->fb_notif));
-	ld->fb_notif.notifier_call = fb_notifier_callback;
-	return fb_register_client(&ld->fb_notif);
+	return ret;
 }
 
-static void lcd_unregister_fb(struct lcd_device *ld)
-{
-	fb_unregister_client(&ld->fb_notif);
-}
-#else
-static int lcd_register_fb(struct lcd_device *ld)
-{
-	return 0;
-}
-
-static inline void lcd_unregister_fb(struct lcd_device *ld)
-{
-}
-#endif /* CONFIG_FB */
+EXPORT_SYMBOL(lcd_set_power);
 
 static ssize_t lcd_show_power(struct device *dev, struct device_attribute *attr,
 		char *buf)
@@ -217,12 +179,6 @@ struct lcd_device *lcd_device_register(c
 		return ERR_PTR(rc);
 	}
 
-	rc = lcd_register_fb(new_ld);
-	if (rc) {
-		device_unregister(&new_ld->dev);
-		return ERR_PTR(rc);
-	}
-
 	new_ld->ops = ops;
 
 	return new_ld;
@@ -243,7 +199,6 @@ void lcd_device_unregister(struct lcd_de
 	mutex_lock(&ld->ops_lock);
 	ld->ops = NULL;
 	mutex_unlock(&ld->ops_lock);
-	lcd_unregister_fb(ld);
 
 	device_unregister(&ld->dev);
 }
Index: linux-2.6.33/include/linux/lcd.h
===================================================================
--- linux-2.6.33.orig/include/linux/lcd.h
+++ linux-2.6.33/include/linux/lcd.h
@@ -69,18 +69,12 @@ struct lcd_device {
 	struct device dev;
 };
 
-static inline void lcd_set_power(struct lcd_device *ld, int power)
-{
-	mutex_lock(&ld->update_lock);
-	if (ld->ops && ld->ops->set_power)
-		ld->ops->set_power(ld, power);
-	mutex_unlock(&ld->update_lock);
-}
-
 extern struct lcd_device *lcd_device_register(const char *name,
 	struct device *parent, void *devdata, struct lcd_ops *ops);
 extern void lcd_device_unregister(struct lcd_device *ld);
 
+extern int lcd_set_power(struct device *dev, unsigned int power);
+
 #define to_lcd_device(obj) container_of(obj, struct lcd_device, dev)
 
 static inline void * lcd_get_data(struct lcd_device *ld_dev)
Index: linux-2.6.33/drivers/video/backlight/platform_lcd.c
===================================================================
--- linux-2.6.33.orig/drivers/video/backlight/platform_lcd.c
+++ linux-2.6.33/drivers/video/backlight/platform_lcd.c
@@ -19,15 +19,6 @@
 
 #include <video/platform_lcd.h>
 
-struct platform_lcd {
-	struct device		*us;
-	struct lcd_device	*lcd;
-	struct plat_lcd_data	*pdata;
-
-	unsigned int		 power;
-	unsigned int		 suspended : 1;
-};
-
 static inline struct platform_lcd *to_our_lcd(struct lcd_device *lcd)
 {
 	return lcd_get_data(lcd);
Index: linux-2.6.33/include/video/platform_lcd.h
===================================================================
--- linux-2.6.33.orig/include/video/platform_lcd.h
+++ linux-2.6.33/include/video/platform_lcd.h
@@ -19,3 +19,11 @@ struct plat_lcd_data {
 	int	(*match_fb)(struct plat_lcd_data *, struct fb_info *);
 };
 
+struct platform_lcd {
+	struct device		*us;
+	struct lcd_device	*lcd;
+	struct plat_lcd_data	*pdata;
+
+	unsigned int		 power;
+	unsigned int		 suspended : 1;
+};
