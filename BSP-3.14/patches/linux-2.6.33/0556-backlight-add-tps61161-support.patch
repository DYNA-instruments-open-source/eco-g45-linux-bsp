Index: linux-2.6.33/drivers/video/backlight/pwm_bl.c
===================================================================
--- linux-2.6.33.orig/drivers/video/backlight/pwm_bl.c
+++ linux-2.6.33/drivers/video/backlight/pwm_bl.c
@@ -19,6 +19,11 @@
 #include <linux/err.h>
 #include <linux/pwm.h>
 #include <linux/pwm_backlight.h>
+#include <linux/delay.h>
+
+#ifdef CONFIG_BACKLIGHT_PWM_TPS61161_SUPPORT
+#define POWER_UP_PENDING BL_CORE_DRIVER1
+#endif
 
 struct pwm_bl_data {
 	struct pwm_device	*pwm;
@@ -55,6 +60,14 @@ static int pwm_backlight_update_status(s
 	} else {
 #endif
 		if(pb->lut) {
+#ifdef CONFIG_BACKLIGHT_PWM_TPS61161_SUPPORT
+			if (bl->props.state & POWER_UP_PENDING)
+			{
+				pwm_config_raw(pb->pwm, 1, 5000); // ~13kHz with ipg_clk=133MHz
+				mdelay(2);
+				bl->props.state &= ~POWER_UP_PENDING;
+			}
+#endif
 			pwm_config_raw(pb->pwm, pb->lut[brightness], 0xFFFD);
 		}
 		else {
Index: linux-2.6.33/drivers/video/backlight/backlight.c
===================================================================
--- linux-2.6.33.orig/drivers/video/backlight/backlight.c
+++ linux-2.6.33/drivers/video/backlight/backlight.c
@@ -19,6 +19,10 @@
 #include <asm/backlight.h>
 #endif
 
+#ifdef CONFIG_BACKLIGHT_PWM_TPS61161_SUPPORT
+#define POWER_UP_PENDING BL_CORE_DRIVER1
+#endif
+
 unsigned long backlight_get_power(struct device *dev)
 {
 	struct platform_device *pd = to_platform_device(dev);
@@ -40,6 +44,10 @@ int backlight_set_power(struct device *d
 	if (bd)
 	{
 		pr_debug("backlight: set power to %lu\n", power);
+#ifdef CONFIG_BACKLIGHT_PWM_TPS61161_SUPPORT
+		if (bd->props.power == FB_BLANK_POWERDOWN && power != FB_BLANK_POWERDOWN)
+			bd->props.state |= POWER_UP_PENDING;
+#endif
 		bd->props.power = power;
 		backlight_update_status(bd);
 		return 0;
@@ -95,6 +103,10 @@ static ssize_t backlight_store_power(str
 	if (bd->ops) {
 		pr_debug("backlight: set power to %lu\n", power);
 		if (bd->props.power != power) {
+#ifdef CONFIG_BACKLIGHT_PWM_TPS61161_SUPPORT
+			if (bd->props.power == FB_BLANK_POWERDOWN)
+				bd->props.state |= POWER_UP_PENDING;
+#endif
 			bd->props.power = power;
 			backlight_update_status(bd);
 		}
@@ -128,11 +140,15 @@ static ssize_t backlight_store_brightnes
 
 	mutex_lock(&bd->ops_lock);
 	if (bd->ops) {
-		if (brightness > bd->props.max_brightness)
+		if (brightness > bd->props.max_brightness || brightness < 0)
 			rc = -EINVAL;
 		else {
 			pr_debug("backlight: set brightness to %lu\n",
 				 brightness);
+#ifdef CONFIG_BACKLIGHT_PWM_TPS61161_SUPPORT
+			if (bd->props.brightness == 0 && brightness != 0)
+				bd->props.state |= POWER_UP_PENDING;
+#endif
 			bd->props.brightness = brightness;
 			backlight_update_status(bd);
 			rc = count;
Index: linux-2.6.33/drivers/video/backlight/Kconfig
===================================================================
--- linux-2.6.33.orig/drivers/video/backlight/Kconfig
+++ linux-2.6.33/drivers/video/backlight/Kconfig
@@ -205,6 +205,13 @@ config BACKLIGHT_PWM
 	  If you have a LCD backlight adjustable by PWM, say Y to enable
 	  this driver.
 
+config BACKLIGHT_PWM_TPS61161_SUPPORT
+	bool "Support TI TPS61161 backlight driver"
+	depends on BACKLIGHT_PWM && BACKLIGHT_CLASS_DEVICE && HAVE_PWM
+	help
+	  If the PWM signal is connected to a Texas Instruments TPS61161
+	  say Y to enable correct startup sequence for this device.
+
 config BACKLIGHT_DA903X
 	tristate "Backlight Driver for DA9030/DA9034 using WLED"
 	depends on BACKLIGHT_CLASS_DEVICE && PMIC_DA903X
