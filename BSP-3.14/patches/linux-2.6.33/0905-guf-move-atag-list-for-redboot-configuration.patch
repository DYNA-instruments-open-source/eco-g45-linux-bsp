Index: linux-2.6.33/arch/arm/Kconfig
===================================================================
--- linux-2.6.33.orig/arch/arm/Kconfig
+++ linux-2.6.33/arch/arm/Kconfig
@@ -1354,6 +1354,13 @@ config ATAGS_PROC
 	  Should the atags used to boot the kernel be exported in an "atags"
 	  file in procfs. Useful with kexec.
 
+config MOVE_ATAG_LIST_FOR_GUF_REDBOOT
+	bool "Move ATAG list for Garz & Fricke RedBoot"
+	help
+	  This option moves the ATAG list to the address where the Garz & Fricke
+	  RedBoot bootloader stores it. The linux default address offset is
+	  0x100, RedBoot uses 0x10000.
+
 endmenu
 
 menu "CPU Power Management"
Index: linux-2.6.33/arch/arm/Makefile
===================================================================
--- linux-2.6.33.orig/arch/arm/Makefile
+++ linux-2.6.33/arch/arm/Makefile
@@ -114,6 +114,9 @@ textofs-$(CONFIG_ARCH_CLPS711X) := 0x000
 ifeq ($(CONFIG_ARCH_SA1100),y)
 textofs-$(CONFIG_SA1111) := 0x00208000
 endif
+ifeq ($(CONFIG_MOVE_ATAG_LIST_FOR_GUF_REDBOOT),y)
+textofs-$(CONFIG_MOVE_ATAG_LIST_FOR_GUF_REDBOOT)   := 0x00100000
+endif
 
 # Machine directory name.  This list is sorted alphanumerically
 # by CONFIG_* macro name.
Index: linux-2.6.33/arch/arm/kernel/head.S
===================================================================
--- linux-2.6.33.orig/arch/arm/kernel/head.S
+++ linux-2.6.33/arch/arm/kernel/head.S
@@ -37,9 +37,11 @@
  * the least significant 16 bits to be 0x8000, but we could probably
  * relax this restriction to KERNEL_RAM_VADDR >= PAGE_OFFSET + 0x4000.
  */
+#ifndef CONFIG_MOVE_ATAG_LIST_FOR_GUF_REDBOOT
 #if (KERNEL_RAM_VADDR & 0xffff) != 0x8000
 #error KERNEL_RAM_VADDR must start at 0xXXXX8000
 #endif
+#endif
 
 	.globl	swapper_pg_dir
 	.equ	swapper_pg_dir, KERNEL_RAM_VADDR - 0x4000
Index: linux-2.6.33/arch/arm/mach-mx3/Makefile.boot
===================================================================
--- linux-2.6.33.orig/arch/arm/mach-mx3/Makefile.boot
+++ linux-2.6.33/arch/arm/mach-mx3/Makefile.boot
@@ -1,3 +1,9 @@
+ifeq ($(CONFIG_MOVE_ATAG_LIST_FOR_GUF_REDBOOT),y)
+   zreladdr-y	:= 0x80100000
+params_phys-y	:= 0x80010000
+initrd_phys-y	:= 0x80800000
+else
    zreladdr-y	:= 0x80008000
 params_phys-y	:= 0x80000100
 initrd_phys-y	:= 0x80800000
+endif
Index: linux-2.6.33/arch/arm/mach-mx25/Makefile.boot
===================================================================
--- linux-2.6.33.orig/arch/arm/mach-mx25/Makefile.boot
+++ linux-2.6.33/arch/arm/mach-mx25/Makefile.boot
@@ -1,3 +1,9 @@
+ifeq ($(CONFIG_MOVE_ATAG_LIST_FOR_GUF_REDBOOT),y)
+   zreladdr-y	:= 0x80100000
+params_phys-y	:= 0x80010000
+initrd_phys-y	:= 0x80800000
+else
    zreladdr-y	:= 0x80008000
 params_phys-y	:= 0x80000100
 initrd_phys-y	:= 0x80800000
+endif
Index: linux-2.6.33/arch/arm/mach-mx2/Makefile.boot
===================================================================
--- linux-2.6.33.orig/arch/arm/mach-mx2/Makefile.boot
+++ linux-2.6.33/arch/arm/mach-mx2/Makefile.boot
@@ -1,3 +1,15 @@
+ifeq ($(CONFIG_MOVE_ATAG_LIST_FOR_GUF_REDBOOT),y)
+
+zreladdr-$(CONFIG_MACH_MX21)	:= 0xC0100000
+params_phys-$(CONFIG_MACH_MX21)	:= 0xC0010000
+initrd_phys-$(CONFIG_MACH_MX21)	:= 0xC0800000
+
+zreladdr-$(CONFIG_MACH_MX27)	:= 0xA0100000
+params_phys-$(CONFIG_MACH_MX27)	:= 0xA0010000
+initrd_phys-$(CONFIG_MACH_MX27)	:= 0xA0800000
+
+else
+
 zreladdr-$(CONFIG_MACH_MX21)	:= 0xC0008000
 params_phys-$(CONFIG_MACH_MX21)	:= 0xC0000100
 initrd_phys-$(CONFIG_MACH_MX21)	:= 0xC0800000
@@ -5,3 +17,5 @@ initrd_phys-$(CONFIG_MACH_MX21)	:= 0xC08
 zreladdr-$(CONFIG_MACH_MX27)	:= 0xA0008000
 params_phys-$(CONFIG_MACH_MX27)	:= 0xA0000100
 initrd_phys-$(CONFIG_MACH_MX27)	:= 0xA0800000
+
+endif
