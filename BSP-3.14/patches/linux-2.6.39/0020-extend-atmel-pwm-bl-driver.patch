Index: linux-2.6.39/drivers/video/backlight/atmel-pwm-bl.c
===================================================================
--- linux-2.6.39.orig/drivers/video/backlight/atmel-pwm-bl.c
+++ linux-2.6.39/drivers/video/backlight/atmel-pwm-bl.c
@@ -21,10 +21,10 @@
 
 struct atmel_pwm_bl {
 	const struct atmel_pwm_bl_platform_data	*pdata;
-	struct backlight_device			*bldev;
-	struct platform_device			*pdev;
-	struct pwm_channel			pwmc;
-	int					gpio_on;
+	struct backlight_device *bldev;
+	struct platform_device *pdev;
+	struct pwm_channel pwmc;
+	int gpio_on;
 };
 
 static int atmel_pwm_bl_set_intensity(struct backlight_device *bd)
@@ -48,15 +48,17 @@ static int atmel_pwm_bl_set_intensity(st
 	if (pwm_duty < pwmbl->pdata->pwm_duty_min)
 		pwm_duty = pwmbl->pdata->pwm_duty_min;
 
+	if(pwmbl->pdata->pwm_bl_lut) {
+		pwm_duty = pwmbl->pdata->pwm_bl_lut[pwm_duty] >> 3;
+	}
+
 	if (!intensity) {
 		if (pwmbl->gpio_on != -1) {
 			gpio_set_value(pwmbl->gpio_on,
 					0 ^ pwmbl->pdata->on_active_low);
 		}
 		pwm_channel_writel(&pwmbl->pwmc, PWM_CUPD, pwm_duty);
-		pwm_channel_disable(&pwmbl->pwmc);
 	} else {
-		pwm_channel_enable(&pwmbl->pwmc);
 		pwm_channel_writel(&pwmbl->pwmc, PWM_CUPD, pwm_duty);
 		if (pwmbl->gpio_on != -1) {
 			gpio_set_value(pwmbl->gpio_on,
@@ -100,9 +102,13 @@ static int atmel_pwm_bl_init_pwm(struct
 		prescale = 0xf;
 
 	pwm_channel_writel(&pwmbl->pwmc, PWM_CMR, prescale);
-	pwm_channel_writel(&pwmbl->pwmc, PWM_CDTY,
-			pwmbl->pdata->pwm_duty_min +
-			pwmbl->bldev->props.brightness);
+	if(!pwmbl->pdata->pwm_bl_lut)
+		pwm_channel_writel(&pwmbl->pwmc, PWM_CDTY,
+				pwmbl->pdata->pwm_duty_min +
+				pwmbl->bldev->props.brightness);
+	else
+		pwm_channel_writel(&pwmbl->pwmc, PWM_CDTY,
+				pwmbl->pdata->pwm_bl_lut[pwmbl->bldev->props.brightness] >> 3);
 	pwm_channel_writel(&pwmbl->pwmc, PWM_CPRD,
 			pwmbl->pdata->pwm_compare_max);
 
@@ -149,7 +155,10 @@ static int atmel_pwm_bl_probe(struct pla
 	pwmbl->pdata = pdata;
 	pwmbl->gpio_on = pdata->gpio_on;
 
-	retval = pwm_channel_alloc(pdata->pwm_channel, &pwmbl->pwmc);
+	if(!pdata->pre_initialized)
+		retval = pwm_channel_alloc(pdata->pwm_channel, &pwmbl->pwmc, 0);
+	else
+		retval = pwm_channel_alloc(pdata->pwm_channel, &pwmbl->pwmc, 1);
 	if (retval)
 		goto err_free_mem;
 
@@ -160,9 +169,9 @@ static int atmel_pwm_bl_probe(struct pla
 			goto err_free_pwm;
 		}
 
-		/* Turn display off by default. */
+		/* Turn display on by default. */
 		retval = gpio_direction_output(pwmbl->gpio_on,
-				0 ^ pdata->on_active_low);
+				1 ^ pdata->on_active_low);
 		if (retval)
 			goto err_free_gpio;
 	}
@@ -181,16 +190,31 @@ static int atmel_pwm_bl_probe(struct pla
 
 	platform_set_drvdata(pdev, pwmbl);
 
-	/* Power up the backlight by default at middle intesity. */
+	/* Power up the backlight with initial intesity. */
 	bldev->props.power = FB_BLANK_UNBLANK;
-	bldev->props.brightness = bldev->props.max_brightness / 2;
-
-	retval = atmel_pwm_bl_init_pwm(pwmbl);
-	if (retval)
-		goto err_free_bl_dev;
+	if(pdata->pwm_duty_init > pdata->pwm_duty_max ||
+		pdata->pwm_duty_init < pdata->pwm_duty_min)
+		bldev->props.brightness = pdata->pwm_duty_max;
+	else
+		bldev->props.brightness = pdata->pwm_duty_init;
 
-	atmel_pwm_bl_set_intensity(bldev);
+	if(!pdata->pre_initialized) {
+		retval = atmel_pwm_bl_init_pwm(pwmbl);
+		if (retval)
+			goto err_free_bl_dev;
 
+		atmel_pwm_bl_set_intensity(bldev);
+	} else { /* Find out the brightness value from the bootloader. */
+		if(pdata->pwm_bl_lut) {
+			for(bldev->props.brightness = 255; bldev->props.brightness < 256; bldev->props.brightness--) {
+				if(pdata->pwm_bl_lut[255 - bldev->props.brightness] >> 3 >= pwm_channel_readl(&pwmbl->pwmc, PWM_CDTY)) {
+					break;
+				}
+			}
+		} else {
+			bldev->props.brightness = pwm_channel_readl(&pwmbl->pwmc, PWM_CDTY);
+		}
+	}
 	return 0;
 
 err_free_bl_dev:
Index: linux-2.6.39/include/linux/atmel-pwm-bl.h
===================================================================
--- linux-2.6.39.orig/include/linux/atmel-pwm-bl.h
+++ linux-2.6.39/include/linux/atmel-pwm-bl.h
@@ -35,9 +35,12 @@ struct atmel_pwm_bl_platform_data {
 	unsigned int pwm_compare_max;
 	unsigned int pwm_duty_max;
 	unsigned int pwm_duty_min;
+	unsigned int pwm_duty_init;
+	unsigned short *pwm_bl_lut;
 	unsigned int pwm_active_low;
 	int gpio_on;
 	unsigned int on_active_low;
+	unsigned int pre_initialized;
 };
 
 #endif /* __INCLUDE_ATMEL_PWM_BL_H */
