Index: classpath-0.98/gnu/java/awt/peer/qt/MainQtThread.java
===================================================================
--- classpath-0.98.orig/gnu/java/awt/peer/qt/MainQtThread.java
+++ classpath-0.98/gnu/java/awt/peer/qt/MainQtThread.java
@@ -51,11 +51,13 @@ public class MainQtThread extends Thread
   String theme;
   private boolean running;
   private boolean doublebuffer;
+  private boolean qws;
 
-  public MainQtThread( String theme, boolean doublebuffer )
+  public MainQtThread( String theme, boolean doublebuffer, boolean qws )
   {
     this.theme = theme;
     this.doublebuffer = doublebuffer;
+	this.qws = qws;
     running = false;
   }
 
@@ -67,7 +69,7 @@ public class MainQtThread extends Thread
   /**
    * Creates the QApplication
    */
-  public native long init(String theme, boolean doublebuffer);
+  public native long init(String theme, boolean doublebuffer, boolean qws);
 
   /**
    * Runs the QApplication (doesn't return.)
@@ -76,7 +78,7 @@ public class MainQtThread extends Thread
 
   public void run()
   {
-    QApplicationPointer = init(theme, doublebuffer);
+    QApplicationPointer = init(theme, doublebuffer, qws);
     running = true;
     exec(QApplicationPointer);
   }
Index: classpath-0.98/gnu/java/awt/peer/qt/QtToolkit.java
===================================================================
--- classpath-0.98.orig/gnu/java/awt/peer/qt/QtToolkit.java
+++ classpath-0.98/gnu/java/awt/peer/qt/QtToolkit.java
@@ -149,7 +149,21 @@ public class QtToolkit extends Classpath
       {
       }
 
-    guiThread = new MainQtThread( theme, doublebuffer );
+    boolean qws = false;
+    try
+      {
+	String s = System.getProperty("qtoptions.qws");
+	if(s != null)
+	  qws = true;
+      }
+    catch(SecurityException e)
+      {
+      }
+    catch(IllegalArgumentException e)
+      {
+      }
+
+    guiThread = new MainQtThread( theme, doublebuffer, qws );
     guiThread.start();
     repaintThread.start();
   }
Index: classpath-0.98/include/gnu_java_awt_peer_qt_MainQtThread.h
===================================================================
--- classpath-0.98.orig/include/gnu_java_awt_peer_qt_MainQtThread.h
+++ classpath-0.98/include/gnu_java_awt_peer_qt_MainQtThread.h
@@ -10,7 +10,7 @@ extern "C"
 {
 #endif
 
-JNIEXPORT jlong JNICALL Java_gnu_java_awt_peer_qt_MainQtThread_init (JNIEnv *env, jobject, jstring, jboolean);
+JNIEXPORT jlong JNICALL Java_gnu_java_awt_peer_qt_MainQtThread_init (JNIEnv *env, jobject, jstring, jboolean, jboolean);
 JNIEXPORT void JNICALL Java_gnu_java_awt_peer_qt_MainQtThread_exec (JNIEnv *env, jobject, jlong);
 
 #ifdef __cplusplus
Index: classpath-0.98/native/jni/qt-peer/mainqtthread.cpp
===================================================================
--- classpath-0.98.orig/native/jni/qt-peer/mainqtthread.cpp
+++ classpath-0.98/native/jni/qt-peer/mainqtthread.cpp
@@ -50,7 +50,7 @@ QApplication *qApplication;
  * Starts up a QApplication
  */
 JNIEXPORT jlong JNICALL Java_gnu_java_awt_peer_qt_MainQtThread_init
-(JNIEnv *env, jobject obj, jstring theme, jboolean doublebuffer)
+(JNIEnv *env, jobject obj, jstring theme, jboolean doublebuffer, jboolean qws)
 {
   int *argc;
   char **argv;
@@ -75,7 +75,7 @@ JNIEXPORT jlong JNICALL Java_gnu_java_aw
       argv[0] = (char *)malloc(10 * sizeof(char));
       strncpy(argv[0], " \0", 3);
     }
-  QApplication *qtApp = new QApplication( *argc, argv );
+  QApplication *qtApp = new QApplication( *argc, argv, qws ? QApplication::GuiServer : QApplication::GuiClient );
   assert( qtApp );
 
   qApplication = qtApp;
