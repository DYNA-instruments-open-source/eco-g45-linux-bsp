--- a/drivers/pwm/pwm-atmel.c
+++ b/drivers/pwm/pwm-atmel.c
@@ -124,6 +124,7 @@ static int atmel_pwm_config(struct pwm_c
 	unsigned long clk_rate, prd, dty;
 	unsigned long long div;
 	unsigned int pres = 0;
+  unsigned int val;
 	int ret;
 
 	if (test_bit(PWMF_ENABLED, &pwm->flags) && (period_ns != pwm->period)) {
@@ -131,6 +132,7 @@ static int atmel_pwm_config(struct pwm_c
 		return -EBUSY;
 	}
 
+  val = atmel_pwm_ch_readl(atmel_pwm, pwm->hwpwm, PWM_CMR);
 	clk_rate = clk_get_rate(atmel_pwm->clk);
 	div = clk_rate;
 
@@ -142,11 +144,14 @@ static int atmel_pwm_config(struct pwm_c
 		do_div(div, 1000000000);
 
 		if (pres++ > PRD_MAX_PRES) {
-			dev_err(chip->dev, "pres exceeds the maximum value\n");
+			dev_err(chip->dev, "prescaler exceeds the maximum value\n");
 			return -EINVAL;
 		}
 	}
 
+	// correct the prescaler by one
+	pres--;
+
 	/* Calculate the duty cycles */
 	prd = div;
 	div *= duty_ns;
@@ -159,7 +164,9 @@ static int atmel_pwm_config(struct pwm_c
 		return ret;
 	}
 
-	atmel_pwm_ch_writel(atmel_pwm, pwm->hwpwm, PWM_CMR, pres);
+	val &= ~(0x0f);
+	val += pres;
+	atmel_pwm_ch_writel(atmel_pwm, pwm->hwpwm, PWM_CMR, val);
 	atmel_pwm->config(chip, pwm, dty, prd);
 
 	clk_disable(atmel_pwm->clk);
@@ -169,8 +176,11 @@ static int atmel_pwm_config(struct pwm_c
 static void atmel_pwm_config_v1(struct pwm_chip *chip, struct pwm_device *pwm,
 				unsigned long dty, unsigned long prd)
 {
-	struct atmel_pwm_chip *atmel_pwm = to_atmel_pwm_chip(chip);
 	unsigned int val;
+	struct atmel_pwm_chip *atmel_pwm = to_atmel_pwm_chip(chip);
+
+	// duty period is active, this hardware starts with idle time, so invert them
+	dty = prd - dty;
 
 	if (test_bit(PWMF_ENABLED, &pwm->flags)) {
 		/*
